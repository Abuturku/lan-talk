<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:p="http://primefaces.org/ui">

	<ui:composition template="/templates/lan-talk-menu.xhtml">
		<ui:define name="lt-main-content">

			    	<h:form id="createNewPost">
				    	<p:fieldset legend="#{msgs['addPost']}" toggleable="true" toggleSpeed="500">
					        <p:ajax event="toggle"/>
					        
					        <p:inputTextarea value="#{postManagerBean.newPostText}" id="newPostText" required="true" rows="2" cols="100" counter="talkChars" maxlength="255" counterTemplate="{0} characters remaining." autoResize="false" />
					 		<h:outputText id="talkChars" />
					 		<p:message for="newPostText" display="tooltip"/>
					 		
					    	<p:commandButton value="#{msgs['publish']}" actionListener="#{postManagerBean.createPost(userManagerBean.loggedInUser)}">
					    		<f:param name="userId" value="#{userManagerBean.loggedInUser.id}"/>
					    	</p:commandButton>
					    </p:fieldset>
					</h:form>
					<h:form>
						<p:dataScroller value="#{postManagerBean.getAllPosts(userManagerBean.loggedInUser)}" var="post" chunkSize="10">
						
							<p:panel class="talk">
			       				<p:toolbar class="talkInfo+Command">
							        <f:facet name="left">
							        	<h:outputText value="#{postManagerBean.getTimeDiff(post)}" />
							        	<span class="modOnly">Author: #{post.user.name}</span>
							        	<p:commandButton type="button" value="Report" icon="ui-icon-alert" />
							        </f:facet>
							        <f:facet name="right">
								        <p:commandButton value="Report" icon="ui-icon-alert" actionListener="#{reportBean.reportPost(post, userManagerBean.loggedInUser)}" />				       
								        <p:commandButton value="Delete" icon="ui-icon-trash" rendered="#{userManagerBean.isUserOwnerOrMod(post)}" actionListener="#{postManagerBean.deletePost(post, userManagerBean.loggedInUser)}"/>
							        </f:facet>
							    </p:toolbar>
							    
							    <p:layout style="min-height:6rem">
							    	<p:layoutUnit position="center">
							    		<h:outputText value="#{post.text}" />
							    	</p:layoutUnit>
							    	<p:layoutUnit position="east" size="50">
										<h:commandButton action="#{postManagerBean.upvotePost(post, userManagerBean.loggedInUser)}" value="&#x02C4;"/>
										
							    		<h:outputText value="#{post.votes}"/>
									
										<h:commandButton action="#{postManagerBean.downvotePost(post, userManagerBean.loggedInUser)}" value="&#x02C5;"/>
							    	</p:layoutUnit>
							    </p:layout>
							    
							    <p:panel header="3 Comments" toggleable="true" toggleSpeed="500" widgetVar="panel" icon="ui-icon-comment">
							        <p:ajax event="toggle" listener="#{panelView.onToggle}" />
		
									<h:form>
									    <p:panel>
									        <p:inputTextarea id="newCommentText" value="#{commentManagerBean.commentText}" rows="2" cols="100" counter="commentChars" maxlength="255" counterTemplate="{0} characters remaining." autoResize="false" />
									 		<h:outputText id="commentChars"/>
									 		<p:message for="newCommentText" display="tooltip"/>
									 		
									    	<p:commandButton value="#{msgs['publish']} #{msgs['Comment']}" actionListener="#{commentManagerBean.createComment(userManagerBean.loggedInUser, post)}"/>
										</p:panel>
									</h:form>
									
									<p:dataScroller value="#{commentManagerBean.getComments(post)}" var="comment" chunkSize="10">
									
										<p:layout style="min-height:6rem">
									    	<p:layoutUnit position="center">
									    		<h:outputText value="#{comment.text}" />
									    		<h:outputText value="#{commentManagerBean.getTimeDiff(comment)}" />
									    		<span id="authorC0" class="modOnly">
									    			Author: #{comment.user.name}
									    		</span>
									    		<p:commandButton value="Report" icon="ui-icon-alert" actionListener="#{reportBean.reportComment(comment, userManagerBean.loggedInUser)}"/>
									    		<p:commandButton value="Delete" icon="ui-icon-trash" rendered="#{userManagerBean.isUserOwnerOrMod(comment)}" actionListener="#{commentManagerBean.deleteComment(comment, userManagerBean.loggedInUser)}"/>
							        		</p:layoutUnit>
									    	<p:layoutUnit position="east" size="50">
												<h:commandButton action="#{commentManagerBean.upvoteComment(comment, userManagerBean.loggedInUser)}" value="&#x02C4;"/>
												
									    		<h:outputText value="#{comment.votes}"/>
									    		
												<h:commandButton action="#{commentManagerBean.downvoteComment(comment, userManagerBean.loggedInUser)}" value="&#x02C5;"/>
									    	</p:layoutUnit>
									    </p:layout>
								    </p:dataScroller>
							    </p:panel>
							    
		   					</p:panel>
				    	</p:dataScroller>
			 		</h:form>
		
		</ui:define>
	</ui:composition>
</html>